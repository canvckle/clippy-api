type Query {
  profile: ProfileResponse
  quiz(eventId: String): Quiz
  leaderboard: [ProfileResponse]
}

type Mutation {
  addUsername(username: String): SetUsernameResponse
}

type Subscription {
  numberIncremented: Int
}

# Profile
type ProfileResponse {
  username: String
  xp: Int
}

type SetUsernameResponse {
  username: String
  error: String
}

# Picks
enum EventState {
  PREGAME
  LIVE
  FINAL
}

type QuizMetadata {
  name: String!
  eventState: EventState!
}

type QuizOption {
  id: ID!
  name: String!
}

type QuizQuestion {
  id: ID!
  name: String!
  options: [QuizOption]!
  correctAnswer: ID
  xp: Int!
  answerTime: Int
}

type Quiz {
  id: ID!
  metadata: QuizMetadata!
  questions: [QuizQuestion]!
}
